'use strict';(function(){const indexCfg={split:/[^a-zа-яё0-9\w]/gi};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/guide-lets-encrypt-for-apache-ru/','title':"Как включить HTTPS на вашем сайте c Apache с помощью Let’s Encrypt",'section':"Docs",'content':"Как включить HTTPS на вашем сайте c Apache с помощью Let’s Encrypt #  Let’s Encrypt представляет собой некоммерческий центр сертификации (Certificate Authority, CA), позволяющий бесплатно получать, устанавливать и обновлять сертификаты TLS/SSL. Процесс получения сертификатов упрощается за счёт наличия ACME-клиента Certbot, который автоматизирует практически все необходимые операции, в том числе и для Apache.\nНесмотря на то, что SSL-сертификаты Let’s Encrypt бесплатны — это не означает, что уровень их шифрования ниже, чем у платных сертификатов. Let’s Encrypt придерживается самых высоких стандартов шифрования и предлагает сертификаты высокого уровня надежности.\nЧем сертификаты Let\u0026rsquo;s Encrypt отличаются от платных сертификатов #  Стоимостью. Let\u0026rsquo;s Encrypt не потребует денег ни за установку ни за продление сертификата. Однако возможно сделать добровольное пожертвование на сайте проекта.\nСкоростью и простотой установки. Let\u0026rsquo;s Encrypt в своей работе делает упор на автоматизацию абсолютно всех процессов. На типичном веб-сервере на базе Linux требуется выполнить несколько команд, которые настроят HTTPS-шифрование, получат и установят сертификат примерно за 20-30 секунд.\nСроком действия. Бесплатный сертификат Let’s Encrypt нельзя получить на год — только на 90 дней. Каждые три месяца его необходимо выпускать заново. Certbot поможет настроить автоматическое обновление.\nСовместимостью. SSL-сертификаты Let’s Encrypt не работают в некоторых старых браузерах и операционных системах. Например, на компьютерах с Windows XP версии ниже SP3 или устройствах с Android версии ниже 2.3.6.\nПоддержкой. У Let’s Encrypt нет службы поддержки, в которую можно обратиться, если появятся вопросы по установке или работе сертификата. Найти ответы можно в технической документации или на форуме.\nПеред установкой #  Перед тем, как начать следовать описанным в этой статье шагам, убедитесь, что:\n  на вашем сервере Ubuntu настроен доступ для не-рутового (non-root) пользователя с привилегиями sudo и доступом к настройке файрвола;\n  для вашего сервера настроены обе записи DNS, указанные ниже;\n Запись A для documentat.io, указывающая на публичный IP адрес вашего сервера; Запись A для www.documentat.io, указывающая на публичный IP адрес вашего сервера.    настроенный файл виртуального хоста для вашего домена.\n  Для получения бесплатного SSL сертификата и настройки автоматического продления этого сертификата мы будем использовать Certbot.\nТакже мы будем использовать файл отдельного виртуального хоста Apache вместо дефолтного файла конфигурации. Мы рекомендуем создавать новые файлы виртуальных хостов Apache для каждого доменного имени. Это поможет избежать распространённых ошибок и использовать дефолтные файлы в качестве примера корректной конфигурации, если что-нибудь пойдёт не так.\nВ этом руководстве мы будем использовать /etc/apache2/sites-available/documentat.io.conf.\n Шаг 1. Установка Certbot #  Перед началом использования Let’s Encrypt для получения SSL сертификаты установим Certbot на ваш сервер.\nCertbot находится в активной разработке, поэтому пакеты Certbot, предоставляемые Ubuntu, обычно являются устаревшими. Тем не менее, разработчики Certbot поддерживают свой репозиторий пакетов для Ubuntu с актуальными версиями, поэтому мы будем использовать именно этот репозиторий.\nСначала добавим репозиторий:\n$ sudo add-apt-repository ppa:certbot/certbot Далее нажмите ENTER.\nУстановим пакет Certbot для Apache с помощью apt:\n$ sudo apt install python-certbot-apache Теперь Certbot готов к использованию, но для того, чтобы он мог настроить SSL для Apache, нам сперва необходимо проверить настройки Apache.\nШаг 2. Настройка SSL сертификата #  Certbot должен иметь возможность найти корректный виртуальный хост в вашей конфигурации Apache для того, чтобы автоматически конфигурировать SSL. Для этого он будет искать директиву ServerName, которая совпадает с доменным именем, для которого вы запросите сертификат.\nВаш виртуальный хост для вашего домена должен быть расположен по адресу /etc/apache2/sites-available/documentat.io.conf с уже правильно настроенной директивой ServerName.\nДля проверки откройте файл конфигурации в nano или любом другом текстовом редакторе:\n$ sudo nano /etc/apache2/sites-available/documentat.io.conf Найдите строку с ServerName. Она должна выглядеть примерно так:\n... ServerName documentat.io; ... Если она выглядит таким образом, закройте файл и переходите к следующему шагу.\nЕсли она не выглядит так, как описано выше, обновите директиву ServerName. Затем сохраните и закройте файл, после чего проверьте корректность синтаксиса вашего конфигурационного файла командой:\n$ sudo apache2ctl configtest Если вы получили ошибку, откройте файл конфигурации и проверьте его на наличие опечаток или пропущенных символов. После того, как ваш конфигурационный файл будет проходить проверку на корректность, перезагрузите Apache для применения новой конфигурации:\n$ sudo systemctl reload apache2 Теперь Certbot может находить и обновлять корректный виртуальный хост.\nДалее обновим настройки файрвола для пропуска HTTPS трафика.\nШаг 3. Разрешение HTTPS в файрволе #  Если у вас включен файрвол ufw, как рекомендуется в руководстве по первичной настройке сервера, вам необходимо внести некоторые изменения в его настройки для разрешения трафика HTTPS. Обычо Apache регистрирует необходимые профили в ufw в момент установки.\nВы можете ознакомиться с текущими настройками командой:\n$ sudo ufw status Скорее всего вывод будет выглядеть следующим образом:\nStatus: active To Action From -- ------ ---- OpenSSH ALLOW Anywhere Apache ALLOW Anywhere OpenSSH (v6) ALLOW Anywhere (v6) Apache (v6) ALLOW Anywhere (v6) Как видно из вывода, разрешён только трафик HTTP.\nДля того, чтобы разрешить трафик HTTPS, разрешим профиль Apache Full и удалим избыточный профиль Apache:\n$ sudo ufw allow 'Apache Full' $ sudo ufw delete allow 'Apache' Проверим внесённые изменения:\n$ sudo ufw status Теперь настройки ufw должны выглядеть следующим образом:\nStatus: active To Action From -- ------ ---- OpenSSH ALLOW Anywhere Apache Full ALLOW Anywhere OpenSSH (v6) ALLOW Anywhere (v6) Apache Full (v6) ALLOW Anywhere (v6) Теперь мы можем запустить Certbot и получить сертификаты.\nШаг 4. Получение SSL-сертификата #  Certbot предоставляет несколько способов получения сертификатов SSL с использованием плагинов. Плагин для Apache берёт на себя настройку Apache и перезагрузку конфигурации, когда это необходимо. Для использования плагина выполним команду:\n$ sudo certbot --apache -d example.com -d www.example.com Эта команда запускает certbot с плагином -apache, ключи d определяют имена доменов, для которых должен быть выпущен сертификат.\nПоскольку это первый раз, когда вы запустите certbot, вам будет предложено ввести адрес электронной почты и согласиться с условиями использования сервиса. После этого certbot свяжется с сервером Let’s Encrypt, а затем проверит, что вы действительно контролируете домен, для которого вы запросили сертификат.\nЕсли всё прошло успешно, certbot спросит, как вы хотите настроить конфигурацию HTTPS.\nPlease choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access. ------------------------------------------------------------------------------- 1: No redirect - Make no further changes to the webserver configuration. 2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for new sites, or if you're confident your site works on HTTPS. You can undo this change by editing your web server's configuration. ------------------------------------------------------------------------------- Select the appropriate number [1-2] then [enter] (press 'c' to cancel): Выберите подходящий вариант и нажмите ENTER. Конфигурация будет обновлена, а Apache перезапущен для применения изменений. certbot выдаст сообщение о том, что процесс прошёл успешно, и где хранятся ваши сертификаты:\nIMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at: /etc/letsencrypt/live/documentat.io/fullchain.pem Your key file has been saved at: /etc/letsencrypt/live/documentat.io/privkey.pem Your cert will expire on 2020-12-23. To obtain a new or tweaked version of this certificate in the future, simply run certbot again with the \u0026quot;certonly\u0026quot; option. To non-interactively renew *all* of your certificates, run \u0026quot;certbot renew\u0026quot; - Your account credentials have been saved in your Certbot configuration directory at /etc/letsencrypt. You should make a secure backup of this folder now. This configuration directory will also contain certificates and private keys obtained by Certbot so making regular backups of this folder is ideal. - If you like Certbot, please consider supporting our work by: Donating to ISRG / Let's Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le Ваши сертификаты загружены, установлены и работают. Попробуйте перезагрузить ваш сайт с использованием https:// и вы увидите значок безопасности в браузере. Он означает, что соединение с сайтом зашифровано, обычно он выглядит, как зелёная иконка замка. Если вы проверите ваш сервер тестом SSL Labs Server Test, он получит оценку A.\nЗакончим тестированием процесса обновления сертификата.\nШаг 5. Проверка автоматического обновления сертификата #  Сертификаты Let’s Encrypt действительны только 90 дней. Однако пакет certbot самостоятельно обновляет их путём добавления скрипта обновления в /etc/cron.d. Этот скрипт запускается раз в день и автоматически обновляет любые сертификаты, которые закончатся в течение ближайших 30 дней.\nДля тестирования процесса обновления мы можем сделать “сухой” запуск (dry run) certbot:\n$ sudo certbot renew --dry-run Если вы не видите каких-либо ошибок в результате выполнения этой команды, то всё в полном порядке. При необходимости Certbot будет обновлять ваши сертификаты и перезагружать Apache для применения изменений. Если автоматическое обновление по какой-либо причине закончится ошибкой, Let’s Encrypt отправит электронное письмо на указанный вами адрес электронной почты с информацией о сертификате, который скоро закончится.\n"});index.add({'id':1,'href':'/docs/guide-lets-encyrpt-for-nginx-ru/','title':"Как включить HTTPS на вашем сайте с nginx с помощью Let's Encrypt",'section':"Docs",'content':"Как включить HTTPS на вашем сайте с nginx с помощью Let\u0026rsquo;s Encrypt #  Let’s Encrypt представляет собой некоммерческий центр сертификации (Certificate Authority, CA), позволяющий бесплатно получать, устанавливать и обновлять сертификаты TLS/SSL. Процесс получения сертификатов упрощается за счёт наличия ACME-клиента Certbot, который автоматизирует практически все необходимые операции.\nНесмотря на то, что SSL-сертификаты Let’s Encrypt бесплатны — это не означает, что уровень их шифрования ниже, чем у платных сертификатов. Let’s Encrypt придерживается самых высоких стандартов шифрования и предлагает сертификаты высокого уровня надежности.\nЧем сертификаты Let’s Encrypt отличаются от платных сертификатов #  Стоимостью. Let’s Encrypt не потребует денег ни за установку, ни за продление сертификата. Однако возможно сделать добровольное пожертвование на сайте проекта.\nСкоростью и простотой установки. Let\u0026rsquo;s Encrypt в своей работе делает упор на автоматизацию абсолютно всех процессов. На типичном веб-сервере на базе Linux требуется выполнить несколько команд, которые настроят HTTPS-шифрование, получат и установят сертификат примерно за 20-30 секунд.\nСроком действия. Бесплатный сертификат Let’s Encrypt нельзя получить на год — только на 90 дней. Каждые три месяца его необходимо выпускать заново. Certbot поможет настроить автоматическое обновление.\nСовместимостью. SSL-сертификаты Let’s Encrypt не работают в некоторых старых браузерах и операционных системах. Например, на компьютерах с Windows XP версии ниже SP3 или устройствах с Android версии ниже 2.3.6.\nПоддержкой. У Let’s Encrypt нет службы поддержки, в которую можно обратиться, если появятся вопросы по установке или работе сертификата. Найти ответы можно в технической документации или на форуме.\nПеред установкой #  Перед тем, как начать следовать описанным в этой статье шагам, убедитесь, что:\n  на вашем сервере Ubuntu настроен доступ для не-рутового (non-root) пользователя с привилегиями sudo и доступом к настройке файрвола;\n  для вашего сервера настроены обе записи DNS, указанные ниже;\n Запись A для documentat.io, указывающая на публичный IP адрес вашего сервера; Запись A для www.documentat.io, указывающая на публичный IP адрес вашего сервера.    для вашего домена существует серверный блок. Ваш блок скорее всего будет выглядеть как /etc/nginx/sites-available/documentat.io .\n  Для получения бесплатного SSL сертификата и настройки автоматического продления этого сертификата мы будем использовать Certbot.\nТакже вместо файла по умолчанию мы будем использовать отдельный файл конфигурации сервера Nginx. Мы рекомендуем создавать новые файлы серверных блоков Nginx для каждого домена. Это поможет избежать распространённых ошибок и использовать дефолтные файлы в качестве примера корректной конфигурации, если что-нибудь пойдёт не так.\nШаг 1. Установка Certbot #  Перед началом использования Let’s Encrypt для получения SSL сертификаты установим Certbot на ваш сервер.\nУстановим Certbot и его плагин nginx с помощью apt:\n$ sudo apt install certbot python3-certbot-nginx Теперь Certbot готов к использованию, но для того, чтобы он мог настроить SSL для nginx, нам сперва необходимо проверить настройки nginx.\nШаг 2. Настройка конфигурации Nginx #  Чтобы настраивать SSL автоматически, Certbot необходимо найти правильный серверный блок в вашей конфигурации nginx. Для этого нужно найти директиву server_name, соответствующую домену, для которого вы запрашиваете сертификат.\nCерверный блок для вашего домена должен располагаться по адресу /etc/nginx/sites-available/documentat.io с уже настроенной директивой server_name\nДля проверки откройте файл серверного блока в nano или любом другом текстовом редакторе:\n$ sudo nano /etc/nginx/sites-available/documentat.io Найдите строку с ServerName. Она должна выглядеть примерно так:\n... server_name documentat.io www.documentat.io; ... Если она выглядит таким образом, закройте файл и переходите к следующему шагу.\nЕсли она не выглядит так, как описано выше, обновите директиву ServerName. Затем сохраните и закройте файл, после чего проверьте корректность синтаксиса вашего конфигурационного файла командой:\n$ sudo nginx -t Если вы получили ошибку, откройте файл серверного блока и проверьте его на наличие опечаток или пропущенных символов. После того, как ваш конфигурационный файл будет проходить проверку на корректность, перезагрузите nginx для применения новой конфигурации:\n$ sudo systemctl reload nginx Теперь Certbot сможет найти правильный серверный блок и автоматически обновлять его.\nДалее обновим настройки файрвола для пропуска HTTPS трафика.\nШаг 3. Разрешение HTTPS в файрволе #  Если у вас включен файрвол ufw, как рекомендуется в руководстве по первичной настройке сервера, вам необходимо внести некоторые изменения в его настройки для разрешения трафика HTTPS. Обычно при установке nginx регистрирует в ufw несколько профилей.\nВы можете ознакомиться с текущими настройками командой:\n$ sudo ufw status Скорее всего вывод будет выглядеть следующим образом:\nStatus: active To Action From -- ------ ---- OpenSSH ALLOW Anywhere Nginx HTTP ALLOW Anywhere OpenSSH (v6) ALLOW Anywhere (v6) Nginx HTTP (v6) ALLOW Anywhere (v6) Как видно из вывода, разрешён только трафик HTTP.\nЧтобы разрешить трафик HTTPS, активируйте профиль Nginx Full и удалите лишний профиль Nginx HTTP:\n$ sudo ufw allow 'Nginx Full' $ sudo ufw delete allow 'Nginx HTTP' Проверим внесённые изменения:\n$ sudo ufw status Теперь настройки ufw должны выглядеть следующим образом:\nStatus: active To Action From -- ------ ---- OpenSSH ALLOW Anywhere Nginx Full ALLOW Anywhere OpenSSH (v6) ALLOW Anywhere (v6) Nginx Full (v6) ALLOW Anywhere (v6) Теперь мы можем запустить Certbot и получить сертификаты.\nШаг 4. Получение SSL-сертификата #  Certbot предоставляет несколько способов получения сертификатов SSL с использованием плагинов. Плагин для nginx изменит конфигурацию Nginx и перезагрузит ее, когда это потребуется. Для использования плагина выполним команду:\n$ sudo certbot --nginx -d documentat.io -d www.documentat.io Эта команда запускает certbot с плагином --nginx, ключи d определяют имена доменов, для которых должен быть выпущен сертификат.\nПоскольку это первый раз, когда вы запустите certbot, вам будет предложено ввести адрес электронной почты и согласиться с условиями использования сервиса. После этого certbot свяжется с сервером Let’s Encrypt, а затем проверит, что вы действительно контролируете домен, для которого вы запросили сертификат.\nЕсли всё прошло успешно, certbot спросит, как вы хотите настроить конфигурацию HTTPS.\nPlease choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 1: No redirect - Make no further changes to the webserver configuration. 2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for new sites, or if you're confident your site works on HTTPS. You can undo this change by editing your web server's configuration. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Select the appropriate number [1-2] then [enter] (press 'c' to cancel): Выберите подходящий вариант и нажмите ENTER. Конфигурация будет обновлена, а nginx перезапущен для применения изменений. certbot выдаст сообщение о том, что процесс прошёл успешно, и где хранятся ваши сертификаты:\nIMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at: /etc/letsencrypt/live/documentat.io/fullchain.pem Your key file has been saved at: /etc/letsencrypt/live/documentat.io/privkey.pem Your cert will expire on 2020-12-23. To obtain a new or tweaked version of this certificate in the future, simply run certbot again with the \u0026quot;certonly\u0026quot; option. To non-interactively renew *all* of your certificates, run \u0026quot;certbot renew\u0026quot; - If you like Certbot, please consider supporting our work by: Donating to ISRG / Let's Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le Ваши сертификаты загружены, установлены и работают. Попробуйте перезагрузить ваш сайт с использованием https:// и вы увидите значок безопасности в браузере. Он означает, что соединение с сайтом зашифровано, обычно он выглядит, как зелёная иконка замка. Если вы проверите ваш сервер тестом SSL Labs Server Test, он получит оценку A.\nЗакончим тестированием процесса обновления сертификата.\nШаг 5. Проверка автоматического обновления сертификата #  Сертификаты Let’s Encrypt действительны только 90 дней. Однако пакет certbot выполняет это автоматически, добавляя таймер systemd, который будет запускаться два раза в день и автоматически продлевать все сертификаты, истекающиее менее, чем через 30 дней.\nВы можете запросить статус таймера с помощью команды systemctl:\n$ sudo systemctl status certbot.timer Вывод покажет примерно следующее:\n● certbot.timer - Run certbot twice daily Loaded: loaded (/lib/systemd/system/certbot.timer; enabled; vendor preset: enabled) Active: active (waiting) since Mon 2020-05-04 20:04:36 UTC; 2 weeks 1 days ago Trigger: Thu 2020-05-21 05:22:32 UTC; 9h left Triggers: ● certbot.service Для тестирования процесса обновления мы можем сделать “сухой” запуск (dry run) certbot:\n$ sudo certbot renew --dry-run Если вы не видите каких-либо ошибок в результате выполнения этой команды, то всё в полном порядке. При необходимости Certbot будет обновлять ваши сертификаты и перезагружать nginx для применения изменений. Если автоматическое обновление по какой-либо причине закончится ошибкой, Let’s Encrypt отправит электронное письмо на указанный вами адрес электронной почты с информацией о сертификате, который скоро закончится.\n"});})();